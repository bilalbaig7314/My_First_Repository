import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, TouchableOpacity, StyleSheet, KeyboardAvoidingView, Platform, Switch, Appearance } from 'react-native';

const RegistrationForm = () => {
  const [fullName, setFullName] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [isDarkMode, setIsDarkMode] = useState(Appearance.getColorScheme() === 'dark');

  // Handle system theme change
  useEffect(() => {
    const subscription = Appearance.addChangeListener(({ colorScheme }) => {
      setIsDarkMode(colorScheme === 'dark');
    });
    return () => subscription.remove();
  }, []);

  const handleSubmit = () => {
    // Handle form submission
    console.log('Full Name:', fullName);
    console.log('Email:', email);
    console.log('Password:', password);
    alert('Registration Successful!');
  };

  const toggleDarkMode = () => {
    setIsDarkMode((prev) => !prev);
  };

  // Dynamic styles based on theme
  const themeStyles = isDarkMode ? darkStyles : lightStyles;

  return (
    <KeyboardAvoidingView
      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
      style={[styles.container, themeStyles.container]}
    >
      <View style={[styles.formContainer, themeStyles.formContainer]}>
        <Text style={[styles.title, themeStyles.title]}>Create Your Account</Text>

        {/* Full Name Input */}
        <TextInput
          style={[styles.input, themeStyles.input]}
          placeholder="Full Name"
          placeholderTextColor={isDarkMode ? '#aaa' : '#888'}
          value={fullName}
          onChangeText={setFullName}
          autoCapitalize="words"
        />

        {/* Email Input */}
        <TextInput
          style={[styles.input, themeStyles.input]}
          placeholder="Email"
          placeholderTextColor={isDarkMode ? '#aaa' : '#888'}
          value={email}
          onChangeText={setEmail}
          keyboardType="email-address"
          autoCapitalize="none"
        />

        {/* Password Input */}
        <TextInput
          style={[styles.input, themeStyles.input]}
          placeholder="Password"
          placeholderTextColor={isDarkMode ? '#aaa' : '#888'}
          value={password}
          onChangeText={setPassword}
          secureTextEntry={true} // Hides the password
          autoCapitalize="none"
        />

        {/* Submit Button */}
        <TouchableOpacity style={[styles.button, themeStyles.button]} onPress={handleSubmit}>
          <Text style={styles.buttonText}>Sign Up</Text>
        </TouchableOpacity>

        {/* Dark Mode Toggle */}
        <View style={styles.toggleContainer}>
          <Text style={[styles.toggleText, themeStyles.toggleText]}>
            {isDarkMode ? 'Dark Mode' : 'Light Mode'}
          </Text>
          <Switch
            value={isDarkMode}
            onValueChange={toggleDarkMode}
            trackColor={{ false: '#767577', true: '#81b0ff' }}
            thumbColor={isDarkMode ? '#007BFF' : '#f4f3f4'}
          />
        </View>
      </View>
    </KeyboardAvoidingView>
  );
};

// Common styles
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  formContainer: {
    width: '90%',
    padding: 20,
    borderRadius: 10,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 10,
    elevation: 5,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 20,
    textAlign: 'center',
  },
  input: {
    height: 50,
    borderWidth: 1,
    borderRadius: 8,
    paddingHorizontal: 15,
    marginBottom: 15,
    fontSize: 16,
  },
  button: {
    backgroundColor: '#007BFF',
    paddingVertical: 15,
    borderRadius: 8,
    alignItems: 'center',
  },
  buttonText: {
    color: '#fff',
    fontSize: 18,
    fontWeight: 'bold',
  },
  toggleContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginTop: 20,
  },
  toggleText: {
    fontSize: 16,
  },
});

// Light theme styles
const lightStyles = StyleSheet.create({
  container: {
    backgroundColor: '#f0f8ff', // Light blue background
  },
  formContainer: {
    backgroundColor: '#fff',
  },
  title: {
    color: '#333',
  },
  input: {
    borderColor: '#ddd',
    backgroundColor: '#f9f9f9',
    color: '#333',
  },
  button: {
    backgroundColor: '#007BFF',
  },
  toggleText: {
    color: '#333',
  },
});

// Dark theme styles
const darkStyles = StyleSheet.create({
  container: {
    backgroundColor: '#121212', // Dark background
  },
  formContainer: {
    backgroundColor: '#1e1e1e',
  },
  title: {
    color: '#fff',
  },
  input: {
    borderColor: '#444',
    backgroundColor: '#333',
    color: '#fff',
  },
  button: {
    backgroundColor: '#007BFF',
  },
  toggleText: {
    color: '#fff',
  },
});

export default RegistrationForm;
